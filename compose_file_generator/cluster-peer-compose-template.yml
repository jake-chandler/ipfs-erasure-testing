version: '3.4'
services:
  ipfs{{PEER_NUMBER}}:
      container_name: ipfs{{PEER_NUMBER}}
      image: ipfs/kubo:release
      ports:
        - "4001" # ipfs swarm - expose if needed/wanted
        - "5001" # ipfs api - expose if needed/wanted
        - "8080" # ipfs gateway - expose if needed/wanted
    
      volumes:
        - ./compose/ipfs{{PEER_NUMBER}}:/data/ipfs
      networks:
      - ipfsnet

  cluster{{PEER_NUMBER}}:
    container_name: cluster{{PEER_NUMBER}}
    image: $IMAGE_NAME$
    depends_on:
      - ipfs{{PEER_NUMBER}}
    environment:
      CLUSTER_PEERNAME: cluster{{PEER_NUMBER}}
      CLUSTER_SECRET: "34a320169537634ea2b304eac9970d0203d94b320f82f09d89e96c94e2c7950c"
      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: /dns4/ipfs{{PEER_NUMBER}}/tcp/5001
      CLUSTER_CRDT_TRUSTEDPEERS: '*' # Trust all peers in Cluster
      CLUSTER_RESTAPI_HTTPLISTENMULTIADDRESS: /ip4/0.0.0.0/tcp/9094 # Expose API
      CLUSTER_MONITORPINGINTERVAL: 2s # Speed up peer discovery
    # ports:
    #   - "127.0.0.1:{{PEER_CLUSTER_PORT}}:9094"
    ports:
      - "9095" # Cluster IPFS Proxy endpoint
      - "9096" # Cluster swarm endpoint
    volumes:
      - ./compose/cluster{{PEER_NUMBER}}:/data/ipfs-cluster
    networks:
      - ipfsnet
    command:
      - "daemon --bootstrap {{BOOTSTRAP_PEER}}"

networks:
  ipfsnet:
    external: true